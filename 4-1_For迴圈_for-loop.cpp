#include<iostream>
using namespace std;

int main(){
    /*
    for (建立一個用來控制迴圈的變數 ; 設定迴圈執行的條件 ; 設定控制變數的增減值){
        程式A;
    }
    */

    //範例一，基本語法
    for (int i=0 ; i<5 ; i++){
        cout << "Hi ";
    }
    //範例輸出: Hi Hi Hi Hi Hi 

    /*
    範例一程式講解
    for (int i=0 ; i<5 ; i++)
    int i=0 ->建立一個初始為0的變數i來控制迴圈
    i<5 -> 設定這個迴圈只有在i<5的時候才會執行，若i>=5則會離開迴圈
    i++ -> 每次迴圈結束後，i的值會+1(i++也可以寫為i=i+1)

    運行邏輯
    進入for迴圈，建立int i=0
    判斷i<5為true，執行程式cout<< "Hi "; 輸出Hi 
    i++，現在i=1，進入下一次迴圈
    
    現在i=1，符合i<5，執行程式cout<< "Hi "; 輸出Hi
    i++，現在i=2，進入下一次迴圈
    .
    .
    .
    直到i=5，不符合i<5，跳出迴圈
    */

    cout<<"\n=================="<<'\n';//分隔線

    //範例二，巢狀迴圈與控制變數的應用
    for (int i=0 ; i<3 ; i++){ //第一層迴圈
        for (int j=0 ; j<2 ; j++) //第二層迴圈
            cout << "i="<< i << ", j=" << j << endl;
        cout << "I'm back!!!" <<endl;
    }
    /*
    範例輸出
    i=0, j=0
    i=0, j=1
    I'm back!!!
    i=1, j=0
    i=1, j=1
    I'm back!!!
    i=2, j=0
    i=2, j=1
    I'm back!!!
    */

    /*
    範例二程式詳解
    程式從第一層迴圈開始，建立int i=0，符合i<3，執行第一層迴圈的內的程式
    先進入第二層迴圈，建立int j=0，符合j<2，執行第二層迴圈內的程式
    輸出目前i,j的值(i=0, j=0)
    j+=1，現在j=1，進入下一次第二層迴圈

    j=1，符合j<2，執行第二層迴圈內的程式，輸出(i=0, j=1)
    j+=1，現在j=2，進入下一次第二層迴圈

    j=2，不符合j<2，跳出第二層迴圈
    回到第一層迴圈，執行下一行程式-> cout << "I'm back!!!" <<endl;
    i+=1，現在i=1，進入下一次第一層迴圈

    現在i=1，符合i<3，執行程式...
    .
    .
    .
    一直執行到i=3，不符合i<3，跳出迴圈
    */
}

//本篇筆記參考《徹底研究最新C++物件導向程式設計實例》4-29~4-49
//Create by B.J.Wang 2025/10/2